- include: packages.yml
- include: git.yml

- command: "{{ prefix }}/chruby/bin/chruby-exec --version"
  register: _version
  changed_when: false
  ignore_errors: true
- include: chruby.yml
  when: "_version|failed or not _version.stdout.endswith(' ' + chruby.version)"

- command: "{{ bindir }}/consul version"
  register: _version
  changed_when: false
  ignore_errors: true
- include: consul.yml
  when: "_version|failed or not _version.stdout_lines[0].endswith('v' + consul.version)"

- command: "{{ bindir }}/consul-template -version"
  register: _version
  changed_when: false
  ignore_errors: true
- include: consul-template.yml
  when: "_version|failed or not _version.stderr.endswith('v' + consul_template.version)"

- command: "{{ bindir }}/direnv version"
  register: _version
  changed_when: false
  ignore_errors: true
- include: direnv.yml
  when: "_version|failed or not _version.stdout == direnv.version"

- command: "{{ bindir }}/docker-compose version"
  register: _version
  changed_when: false
  ignore_errors: true
- include: docker-compose.yml
  when: "_version|failed or _version.stdout_lines[0].find(' ' + docker_compose.version + ',') == -1"

- command: "{{ bindir }}/ghq --version"
  register: _version
  changed_when: false
  ignore_errors: true
- include: ghq.yml
  when: "_version|failed or not _version.stdout.endswith(' ' + ghq.version)"

- command: "{{ prefix }}/go/bin/go version"
  register: _version
  changed_when: false
  ignore_errors: true
- include: go.yml
  when: "_version|failed or _version.stdout.find('go' + go.version + ' ') == -1"

- command: "{{ bindir }}/jq --version"
  register: _version
  changed_when: false
  ignore_errors: true
- include: jq.yml
  when: "_version|failed or not _version.stdout == 'jq-' + jq.version"

- command: "{{ bindir }}/hub --version"
  register: _version
  changed_when: false
  ignore_errors: true
- include: hub.yml
  when: "_version|failed or not _version.stdout_lines[1].endswith(' ' + hub.version)"

- command: "{{ bindir }}/peco --version"
  register: _version
  changed_when: false
  ignore_errors: true
- include: peco.yml
  when: "_version|failed or not _version.stderr.endswith('v' + peco.version)"

- command: "{{ prefix }}/ruby-install/bin/ruby-install --version"
  register: _version
  changed_when: false
  ignore_errors: true
- include: ruby-install.yml
  when: "_version|failed or not _version.stdout.endswith(' ' + ruby_install.version)"

- command: "{{ prefix }}/tig/bin/tig --version"
  register: _version
  changed_when: false
  ignore_errors: true
- include: tig.yml
  when: "_version|failed or not _version.stdout.endswith(' ' + tig.version)"
