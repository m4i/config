# vim: fdm=marker

set-option -g prefix C-j
unbind-key C-b
bind-key M-j send-prefix




### options {{{1

set-option        -g default-command     zsh

set-option        -g bell-action         any
set-option        -g visual-bell         on

set-option        -g buffer-limit        20
set-option        -g history-limit       10000

set-option        -g default-terminal    screen-256color

set-option        -g display-panes-time  1500
set-option        -g display-time        3000
set-option        -g repeat-time         1000

set-option        -g status-left         ''
set-option        -g status-right        '#S@#H'

set-option        -g mouse               off
set-option        -g mouse-utf8          off

set-option        -g status-keys         emacs
set-window-option -g mode-keys           vi

set-option        -g status-utf8         on
set-window-option -g utf8                on

set-option        -g visual-activity     off # display "Activity in window N"
set-window-option -g monitor-activity    on  # highlight the status line

set-window-option -g aggressive-resize   off
set-window-option -g automatic-rename    on

set-window-option -g window-status-activity-attr none
set-window-option -g window-status-activity-bg   yellow
set-window-option -g window-status-bell-attr     none
set-window-option -g window-status-bell-bg       red
set-window-option -g window-status-current-attr  reverse

# set-option -g default-terminal
# より前に持って行くと初回起動時に default-terminal が正しく反映されない
if-shell 'command -v reattach-to-user-namespace' \
  'set-option -g default-command "reattach-to-user-namespace -l zsh"'




### key binding {{{1

bind-key   i last-window
bind-key C-i last-window

# Ctrl++
bind-key C-[ copy-mode
bind-key C-] paste-buffer
bind-key C-d detach-client
bind-key C-n next-window
bind-key C-p previous-window
bind-key C-w choose-window

# keep pwd
bind-key   c new-window -c "#{pane_current_path}"
bind-key C-c new-window -c "#{pane_current_path}"

# select-window
bind-key )   select-window -t 10
bind-key !   select-window -t 11
bind-key @   select-window -t 12
bind-key '#' select-window -t 13
bind-key '$' select-window -t 14
bind-key %   select-window -t 15
bind-key ^   select-window -t 16
bind-key &   select-window -t 17
bind-key *   select-window -t 18
bind-key (   select-window -t 19

# pane
bind-key   s split-window -v -c "#{pane_current_path}"
bind-key C-s split-window -v -c "#{pane_current_path}"
bind-key   v split-window -h -c "#{pane_current_path}"
bind-key C-v split-window -h -c "#{pane_current_path}"

bind-key   h select-pane -L
bind-key C-h select-pane -L
bind-key   j select-pane -D
bind-key C-j select-pane -D
bind-key   k select-pane -U
bind-key C-k select-pane -U
bind-key   l select-pane -R
bind-key C-l select-pane -R

bind-key H select-layout main-vertical   \; swap-pane -s : -t 0 \; select-pane -t 0
bind-key K select-layout main-horizontal \; swap-pane -s : -t 0 \; select-pane -t 0

bind-key -r   - resize-pane -U 1
bind-key -r   + resize-pane -D 1
bind-key -r   < resize-pane -L 1
bind-key -r   > resize-pane -R 1
bind-key -r M-- resize-pane -U 5
bind-key -r M-+ resize-pane -D 5
bind-key -r M-< resize-pane -L 5
bind-key -r M-> resize-pane -R 5

# move to M-
bind-key M-_ delete-buffer   # default -
bind-key M-i display-message # default i
bind-key M-s choose-session  # default s

# reload ~/.tmux.conf
bind-key C-r source-file ~/.tmux.conf

# in copy mode
unbind-key -t vi-copy Enter
unbind-key -t vi-copy Space
  bind-key -t vi-copy   v begin-selection
  bind-key -t vi-copy   V select-line
  bind-key -t vi-copy C-v rectangle-toggle
  bind-key -t vi-copy   y copy-selection
  bind-key -t vi-copy   Y copy-line

# OSC 52 は文字数制限があるので copy-selection のみ copy-pipe に変更
if-shell 'command -v clip-client' \
  'bind-key -t vi-copy y copy-pipe "clip-client set"'
if-shell 'command -v pbcopy' \
  'bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"'

# 単にペーストすれば十分なので利用しない
#bind-key   ] run-shell 'clip-client get | tmux load-buffer - && tmux paste-buffer'
#bind-key C-] run-shell 'clip-client get | tmux load-buffer - && tmux paste-buffer'
#bind-key   ] run-shell 'reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer'
#bind-key C-] run-shell 'reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer'




### plugins {{{1

set -g @plugin 'tmux-plugins/tpm'

run '~/.tmux/plugins/tpm/tpm'
